View(groups[[1]])
p1 <- ggplot(groups[[1]], aes(x = SOC_End_Converted, y = soc_end_predicted)) +
geom_point(size = 1) +
geom_abline(slope = 1, intercept = 0, colour = "blue", linetype = 2, linewidth=0.5) +
labs(
x = "Measured (tC/ha)", y = "Modeled (tC/ha)"
) +
ggtitle(paste("A")) +
coord_fixed(xlim = c(0, 70), ylim = c(0, 70), ratio = 1) +
theme(plot.title = element_text(face = "bold"))
p1
length(groups)
ggplot(groups[[i]], aes(x = model_error)) +
geom_histogram(binwidth = 1, bins = 5) +
labs(title = paste("B"), x = "Residual Error", y = "Count") +
theme(plot.title = element_text(face = "bold"))
1:nrow(groups[[i]])
ggplot(groups[[i]], aes(x = 1:nrow(groups[[i]]), y = predicted_diff))
ggplot(groups[[i]], aes(x = 1:nrow(groups[[i]]), y = predicted_diff)) +
geom_point(aes(colour = as.factor(fill)))
ggplot(groups[[i]], aes(x = 1:nrow(groups[[i]]), y = predicted_diff)) +
geom_point(aes(colour = as.factor(fill))) +
geom_errorbar(aes(ymin = cilower, ymax = ciupper), width = 0.4) +
scale_color_manual(values = c("black", "red"))
ggplot(groups[[i]], aes(x = 1:nrow(groups[[i]]), y = predicted_diff)) +
geom_point(aes(colour = as.factor(fill))) +
geom_errorbar(aes(ymin = cilower, ymax = ciupper), width = 0.4) +
scale_color_manual(values = c("black", "red")) +
labs(
title = paste("C"),
x = expression(paste("i"^{
"th"
}, " modeled effect")),
y = "t C/ha",
colour = "Category",
caption =
paste0(
"\n",
paste("Statistics:"),
"\n",
"\n",
paste("PD/CZ combination:", paste(group[g, ], collapse = " ")),
"\n",
paste("Bias:", round(as.numeric(stats[stats[,"gr"] == g, "bias"]), 3)),
"\n",
paste("RMSE:", round(as.numeric(stats[stats[,"gr"] == g, "rmse"]), 3)),
"\n",
paste0("Percent within C.I.: ", round(ci_in, 3), "%")
# "\n",
# paste("Calibration Coefficients:"),
# "\n",
# paste(
#   "cf1:", round(as.numeric(solution[solution[,"group"] == g, "cf1"]), 3),
#   "cf2:", round(as.numeric(solution[solution[,"group"] == g, "cf1"]), 3),
#   "cf3:", round(as.numeric(solution[solution[,"group"] == g, "cf3"]), 3),
#   "cf4:", round(as.numeric(solution[solution[,"group"] == g, "cf4"]), 3),
#   "cf5:", round(as.numeric(solution[solution[,"group"] == g, "cf5"]), 3)
# )
)
)
names(roups[[i]])
names(groups[[i]])
groups[[i]][,c("Practice_Category", "Climate_zones_IPCC", "CFGs")]
paste(groups[[i]][,c("Practice_Category", "Climate_zones_IPCC", "CFGs")], collapse = " ")
groups[[i]][,c("Practice_Category", "Climate_zones_IPCC", "CFGs")][1]
groups[[i]][1,c("Practice_Category", "Climate_zones_IPCC", "CFGs")]
paste(groups[[i]][1,c("Practice_Category", "Climate_zones_IPCC", "CFGs")], collapse = " ")
p3 <- ggplot(groups[[i]], aes(x = 1:nrow(groups[[i]]), y = predicted_diff)) +
geom_point(aes(colour = as.factor(fill))) +
geom_errorbar(aes(ymin = cilower, ymax = ciupper), width = 0.4) +
scale_color_manual(values = c("black", "red")) +
labs(
title = paste("C"),
x = expression(paste("i"^{
"th"
}, " modeled effect")),
y = "t C/ha",
colour = "Category",
caption =
paste0(
"\n",
paste("Statistics:"),
"\n",
"\n",
paste("PD/CZ combination:", paste(groups[[i]][1,c("Practice_Category", "Climate_zones_IPCC", "CFGs")], collapse = " "))
)
) +
theme(plot.title = element_text(face = "bold")) +
theme(plot.caption = element_text(hjust = 0, size = 12))
p3
p <- (p1 + p2) / p3
p1 <- ggplot(groups[[i]], aes(x = SOC_End_Converted, y = soc_end_predicted)) +
geom_point(size = 1) +
geom_abline(slope = 1, intercept = 0, colour = "blue", linetype = 2, linewidth=0.5) +
labs(
x = "Measured (tC/ha)", y = "Modeled (tC/ha)"
) +
ggtitle(paste("A")) +
coord_fixed(xlim = c(0, 70), ylim = c(0, 70), ratio = 1) +
theme(plot.title = element_text(face = "bold"))
model_error <- data_out[data_out$i == g, "Predicted diff"] - data_out[data_out$i == g, "Observed diff"]
p2 <- ggplot(groups[[i]], aes(x = model_error)) +
geom_histogram(binwidth = 1, bins = 5) +
labs(title = paste("B"), x = "Residual Error", y = "Count") +
theme(plot.title = element_text(face = "bold"))
p1 <- ggplot(groups[[i]], aes(x = SOC_End_Converted, y = soc_end_predicted)) +
geom_point(size = 1) +
geom_abline(slope = 1, intercept = 0, colour = "blue", linetype = 2, linewidth=0.5) +
labs(
x = "Measured (tC/ha)", y = "Modeled (tC/ha)"
) +
ggtitle(paste("A")) +
coord_fixed(xlim = c(0, 70), ylim = c(0, 70), ratio = 1) +
theme(plot.title = element_text(face = "bold"))
p2 <- ggplot(groups[[i]], aes(x = model_error)) +
geom_histogram(binwidth = 1, bins = 5) +
labs(title = paste("B"), x = "Residual Error", y = "Count") +
theme(plot.title = element_text(face = "bold"))
p3 <- ggplot(groups[[i]], aes(x = 1:nrow(groups[[i]]), y = predicted_diff)) +
geom_point(aes(colour = as.factor(fill))) +
geom_errorbar(aes(ymin = cilower, ymax = ciupper), width = 0.4) +
scale_color_manual(values = c("black", "red")) +
labs(
title = paste("C"),
x = expression(paste("i"^{
"th"
}, " modeled effect")),
y = "t C/ha",
colour = "Category",
caption =
paste0(
"\n",
paste("Statistics:"),
"\n",
"\n",
paste("PD/CZ combination:", paste(groups[[i]][1,c("Practice_Category", "Climate_zones_IPCC", "CFGs")], collapse = " "))
)
) +
theme(plot.title = element_text(face = "bold")) +
theme(plot.caption = element_text(hjust = 0, size = 12))
p1 <- ggplot(groups[[i]], aes(x = SOC_End_Converted, y = soc_end_predicted)) +
geom_point(size = 1) +
geom_abline(slope = 1, intercept = 0, colour = "blue", linetype = 2, linewidth=0.5) +
labs(
x = "Measured (tC/ha)", y = "Modeled (tC/ha)"
) +
ggtitle(paste("A")) +
coord_fixed(xlim = c(0, 70), ylim = c(0, 70), ratio = 1) +
theme(plot.title = element_text(face = "bold"))
p2 <- ggplot(groups[[i]], aes(x = model_error)) +
geom_histogram(binwidth = 1, bins = 5) +
labs(title = paste("B"), x = "Residual Error", y = "Count") +
theme(plot.title = element_text(face = "bold"))
p3 <- ggplot(groups[[i]], aes(x = 1:nrow(groups[[i]]), y = predicted_diff)) +
geom_point(aes(colour = as.factor(fill))) +
geom_errorbar(aes(ymin = cilower, ymax = ciupper), width = 0.4) +
scale_color_manual(values = c("black", "red")) +
labs(
title = paste("C"),
x = expression(paste("i"^{
"th"
}, " modeled effect")),
y = "t C/ha",
colour = "Category",
caption =
paste0(
"\n",
paste("Statistics:"),
"\n",
"\n",
paste("PD/CZ combination:", paste(groups[[i]][1,c("Practice_Category", "Climate_zones_IPCC", "CFGs")], collapse = " "))
)
) +
theme(plot.title = element_text(face = "bold")) +
theme(plot.caption = element_text(hjust = 0, size = 12))
p <- (p1 + p2) / p3
p
p1 <- ggplot(groups[[i]], aes(x = SOC_End_Converted, y = soc_end_predicted)) +
geom_point(size = 1) +
geom_abline(slope = 1, intercept = 0, colour = "blue", linetype = 2, linewidth=0.5) +
labs(
x = "Measured (tC/ha)", y = "Modeled (tC/ha)"
) +
ggtitle(paste("A")) +
coord_fixed(xlim = c(0, 70), ylim = c(0, 70), ratio = 1) +
theme(plot.title = element_text(face = "bold"))
p2 <- ggplot(groups[[i]], aes(x = model_error)) +
geom_histogram(binwidth = 1, bins = 5) +
labs(title = paste("B"), x = "Residual Error", y = "Count") +
theme(plot.title = element_text(face = "bold"))
p3 <- ggplot(groups[[i]], aes(x = 1:nrow(groups[[i]]), y = predicted_diff)) +
geom_point(aes(colour = as.factor(fill))) +
geom_errorbar(aes(ymin = cilower, ymax = ciupper), width = 0.4) +
scale_color_manual(values = c("black", "red")) +
labs(
title = paste("C"),
x = expression(paste("i"^{
"th"
}, " modeled effect")),
y = "t C/ha",
colour = "Category",
caption =
paste0(
"\n",
"\n",
paste("PD/CZ combination:", paste(groups[[i]][1,c("Practice_Category", "Climate_zones_IPCC", "CFGs")], collapse = " "))
)
) +
theme(plot.title = element_text(face = "bold")) +
theme(plot.caption = element_text(hjust = 0, size = 12))
p <- (p1 + p2) / p3
p
p <- p + plot_layout(heights = c(2, 1))
p
p1 <- ggplot(groups[[i]], aes(x = SOC_End_Converted, y = soc_end_predicted)) +
geom_point(size = 1) +
geom_abline(slope = 1, intercept = 0, colour = "blue", linetype = 2, linewidth=0.5) +
labs(
x = "Measured (tC/ha)", y = "Modeled (tC/ha)"
) +
ggtitle(paste("A")) +
coord_fixed(xlim = c(0, 70), ylim = c(0, 70), ratio = 1) +
theme(plot.title = element_text(face = "bold"))
p2 <- ggplot(groups[[i]], aes(x = model_error)) +
geom_histogram(binwidth = 1, bins = 5) +
labs(title = paste("B"), x = "Residual Error", y = "Count") +
theme(plot.title = element_text(face = "bold"))
p3 <- ggplot(groups[[i]], aes(x = 1:nrow(groups[[i]]), y = predicted_diff)) +
geom_point(aes(colour = as.factor(fill))) +
geom_errorbar(aes(ymin = cilower, ymax = ciupper), width = 0.4) +
scale_color_manual(values = c("black", "red")) +
labs(
title = paste("C"),
x = expression(paste("i"^{
"th"
}, " modeled effect")),
y = "t C/ha",
colour = "Category",
caption =
paste0(
"\n",
"\n",
paste(groups[[i]][1,c("Practice_Category", "Climate_zones_IPCC", "CFGs")], collapse = " ")
)
) +
theme(plot.title = element_text(face = "bold")) +
theme(plot.caption = element_text(hjust = 0, size = 12))
p <- (p1 + p2) / p3
p <- p + plot_layout(heights = c(2, 1))
p
paste(groups[[i]][1,c("Practice_Category", "Climate_zones_IPCC", "CFGs")], collapse = " ")
paste(groups[[i]][1,c("Practice_Category", "Climate_zones_IPCC", "CFGs")], collapse = " "), "_new_v2.jpeg")
paste0(paste(groups[[i]][1,c("Practice_Category", "Climate_zones_IPCC", "CFGs")], collapse = " "), "_new_v2.jpeg")
paste0(paste(groups[[i]][1,c("Practice_Category", "Climate_zones_IPCC", "CFGs")], collapse = " "), ".jpg")
paste(paste(groups[[i]][1,c("Practice_Category", "Climate_zones_IPCC", "CFGs")], collapse = "_"), ".jpg", collapse = "_")
styler:::style_selection()
plot_valid <- function(Cis) {
groups <- Cis$Ci %>%
group_split(Practice_Category, Climate_zones_IPCC, CFGs)
for (i in 1:length(groups)) {
p1 <- ggplot(groups[[i]], aes(x = SOC_End_Converted, y = soc_end_predicted)) +
geom_point(size = 1) +
geom_abline(slope = 1, intercept = 0, colour = "blue", linetype = 2, linewidth = 0.5) +
labs(
x = "Measured (tC/ha)", y = "Modeled (tC/ha)"
) +
ggtitle(paste("A")) +
coord_fixed(xlim = c(0, 70), ylim = c(0, 70), ratio = 1) +
theme(plot.title = element_text(face = "bold"))
p2 <- ggplot(groups[[i]], aes(x = model_error)) +
geom_histogram(binwidth = 1, bins = 5) +
labs(title = paste("B"), x = "Residual Error", y = "Count") +
theme(plot.title = element_text(face = "bold"))
p3 <- ggplot(groups[[i]], aes(x = 1:nrow(groups[[i]]), y = predicted_diff)) +
geom_point(aes(colour = as.factor(fill))) +
geom_errorbar(aes(ymin = cilower, ymax = ciupper), width = 0.4) +
scale_color_manual(values = c("black", "red")) +
labs(
title = paste("C"),
x = expression(paste("i"^{
"th"
}, " modeled effect")),
y = "t C/ha",
colour = "Category",
caption =
paste0(
"\n",
"\n",
paste(groups[[i]][1, c("Practice_Category", "Climate_zones_IPCC", "CFGs")], collapse = " ")
)
) +
theme(plot.title = element_text(face = "bold")) +
theme(plot.caption = element_text(hjust = 0, size = 12))
p <- (p1 + p2) / p3
p <- p + plot_layout(heights = c(2, 1))
ggsave(filename = paste(paste(groups[[i]][1, c("Practice_Category", "Climate_zones_IPCC", "CFGs")], collapse = "_"), ".jpg", collapse = "_"), width = 7.5, height = 7, plot = p, path = plots_path)
}
}
plot_valid(Cis)
getwd()
saveRDS(calib_output, "calib_output.rds")
# saveRDS(calib_output, "calib_output.rds")
calib_output <- readRDS("calib_output.rds")
#=========
library(nloptr)
library(googlesheets4)
library(AgreenaRothC2)
library(stringr)
library(SoilR)
library(caret)
library(Metrics)
library(dplyr)
library(ggpubr)
library(patchwork)
set.seed(123)
setwd("/Users/marcospaulopedrosaalves/Documents/Git/AgreenaRothC_data")
plots_path <- "/Users/marcospaulopedrosaalves/Documents/Git/AgreenaRothC_data/plots"
# saveRDS(calib_output, "calib_output.rds")
calib_output <- readRDS("calib_output.rds")
bias_pooled_study <-  calib_output[["all_metrics"]] %>%
group_by(Publication_ID, Practice_Category, climate_zone, CFGs) %>%
summarise(mean_bias = mean(bias))
bias_pooled_comb <-  calib_output[["all_metrics"]] %>%
group_by(Practice_Category, climate_zone, CFGs) %>%
summarise(mean_bias = mean(bias))
bias_pooled_all <-  calib_output[["all_metrics"]] %>%
ungroup() %>%
summarise(mean_bias = mean(bias))
rmse_pooled_study <-  calib_output[["all_metrics"]] %>%
group_by(Publication_ID, Practice_Category, climate_zone, CFGs) %>%
summarise(mean_rmse = mean(rmse))
rmse_pooled_comb <-  calib_output[["all_metrics"]] %>%
group_by(Practice_Category, climate_zone, CFGs) %>%
summarise(mean_rmse = mean(rmse))
rmse_pooled_all <-  calib_output[["all_metrics"]] %>%
ungroup() %>%
summarise(mean_rmse = mean(rmse))
Cis <- CI(calib_output[["data_out"]])
CI <- function(data_out){
diffs <- data_out %>%
mutate(observed_diff = SOC_End_Converted - SOC_Start_Converted,
predicted_diff = soc_end_predicted - SOC_Start_Converted,
model_error = predicted_diff - observed_diff)
sds <- diffs %>%
group_by(Practice_Category, CFGs, Climate_zones_IPCC) %>%
summarise(sd = sd(model_error), n = n(),.groups ="drop")
Ci <- left_join(diffs, sd, by = c("Practice_Category", "CFGs", "Climate_zones_IPCC")) %>%
mutate(cilower = observed_diff - 1.64 * sd, ciupper = observed_diff + 1.64 * sd,
fill = ifelse(predicted_diff < cilower | predicted_diff > ciupper,"Outside C.I.","Inside C.I."))
Ci_percent <- Ci %>%
group_by(Practice_Category, CFGs, Climate_zones_IPCC) %>%
summarise(ci_percent = mean(fill == "Inside C.I.") * 100, .groups = "drop")
return(list("Ci_percent" = Ci_percent, "Ci" = Ci))
}
Cis <- CI(calib_output[["data_out"]])
Cis
calib_output[["data_out"]]
data_out <- calib_output[["data_out"]]
diffs <- data_out %>%
mutate(observed_diff = SOC_End_Converted - SOC_Start_Converted,
predicted_diff = soc_end_predicted - SOC_Start_Converted,
model_error = predicted_diff - observed_diff)
sds <- diffs %>%
group_by(Practice_Category, CFGs, Climate_zones_IPCC) %>%
summarise(sd = sd(model_error), n = n(),.groups ="drop")
Ci <- left_join(diffs, sd, by = c("Practice_Category", "CFGs", "Climate_zones_IPCC")) %>%
mutate(cilower = observed_diff - 1.64 * sd, ciupper = observed_diff + 1.64 * sd,
fill = ifelse(predicted_diff < cilower | predicted_diff > ciupper,"Outside C.I.","Inside C.I."))
Ci <- left_join(diffs, sd, by = c("Practice_Category", "CFGs", "Climate_zones_IPCC"))
Ci <- left_join(diffs, sds, by = c("Practice_Category", "CFGs", "Climate_zones_IPCC")) %>%
mutate(cilower = observed_diff - 1.64 * sd, ciupper = observed_diff + 1.64 * sd,
fill = ifelse(predicted_diff < cilower | predicted_diff > ciupper,"Outside C.I.","Inside C.I."))
Ci_percent <- Ci %>%
group_by(Practice_Category, CFGs, Climate_zones_IPCC) %>%
summarise(ci_percent = mean(fill == "Inside C.I.") * 100, .groups = "drop")
CI <- function(data_out){
diffs <- data_out %>%
mutate(observed_diff = SOC_End_Converted - SOC_Start_Converted,
predicted_diff = soc_end_predicted - SOC_Start_Converted,
model_error = predicted_diff - observed_diff)
sds <- diffs %>%
group_by(Practice_Category, CFGs, Climate_zones_IPCC) %>%
summarise(sd = sd(model_error), n = n(),.groups ="drop")
Ci <- left_join(diffs, sds, by = c("Practice_Category", "CFGs", "Climate_zones_IPCC")) %>%
mutate(cilower = observed_diff - 1.64 * sd, ciupper = observed_diff + 1.64 * sd,
fill = ifelse(predicted_diff < cilower | predicted_diff > ciupper,"Outside C.I.","Inside C.I."))
Ci_percent <- Ci %>%
group_by(Practice_Category, CFGs, Climate_zones_IPCC) %>%
summarise(ci_percent = mean(fill == "Inside C.I.") * 100, .groups = "drop")
return(list("Ci_percent" = Ci_percent, "Ci" = Ci))
}
Cis <- CI(calib_output[["data_out"]])
plot_valid(Cis, plots_path)
plot_valid <- function(Cis, plots_path) {
groups <- Cis$Ci %>%
group_split(Practice_Category, Climate_zones_IPCC, CFGs)
for (i in 1:length(groups)) {
p1 <- ggplot(groups[[i]], aes(x = SOC_End_Converted, y = soc_end_predicted)) +
geom_point(size = 1) +
geom_abline(slope = 1, intercept = 0, colour = "blue", linetype = 2, linewidth = 0.5) +
labs(
x = "Measured (tC/ha)", y = "Modeled (tC/ha)"
) +
ggtitle(paste("A")) +
coord_fixed(xlim = c(0, 70), ylim = c(0, 70), ratio = 1) +
theme(plot.title = element_text(face = "bold"))
p2 <- ggplot(groups[[i]], aes(x = model_error)) +
geom_histogram(binwidth = 1, bins = 5) +
labs(title = paste("B"), x = "Residual Error", y = "Count") +
theme(plot.title = element_text(face = "bold"))
p3 <- ggplot(groups[[i]], aes(x = 1:nrow(groups[[i]]), y = predicted_diff)) +
geom_point(aes(colour = as.factor(fill))) +
geom_errorbar(aes(ymin = cilower, ymax = ciupper), width = 0.4) +
scale_color_manual(values = c("black", "red")) +
labs(
title = paste("C"),
x = expression(paste("i"^{
"th"
}, " modeled effect")),
y = "t C/ha",
colour = "Category",
caption =
paste0(
"\n",
"\n",
paste(groups[[i]][1, c("Practice_Category", "Climate_zones_IPCC", "CFGs")], collapse = " ")
)
) +
theme(plot.title = element_text(face = "bold")) +
theme(plot.caption = element_text(hjust = 0, size = 12))
p <- (p1 + p2) / p3
p <- p + plot_layout(heights = c(2, 1))
ggsave(filename = paste(paste(groups[[i]][1, c("Practice_Category", "Climate_zones_IPCC", "CFGs")], collapse = "_"), ".jpg", collapse = "_"), width = 7.5, height = 7, plot = p, path = plots_path)
}
}
plot_valid(Cis, plots_path)
calib_output
devtools::load_all("~/Documents/Git/CalibValidRothC")
library(CalibValidRothC)
devtools::document()
setwd("~/Documents/Git/CalibValidRothC")
devtools::document()
devtools::document()
__CalibValidRothC
?CalibValidRothC
??CalibValidRothC
devtools::document()
devtools::document()
devtools::document()
devtools::document()
??plot_valid
devtools::document()
devtools::document()
.libPaths()
loadNamespace(i, c(lib.loc, .libPaths()), versionCheck = vI[[i]])
devtools::document()
devtools::document()
devtools::document()
library(CalibValidRothC)
library(CalibValidRothC)
library(CalibValidRothC)
set.seed(123)
setwd("/Users/marcospaulopedrosaalves/Documents/Git/AgreenaRothC_data")
plots_path <- "/Users/marcospaulopedrosaalves/Documents/Git/AgreenaRothC_data/plots"
data_source <- readRDS("/Users/marcospaulopedrosaalves/Documents/Git/AgreenaRothC_data/data_source.rds")
calib_output <- calibration(data_source)
library(CalibValidRothC)
library(CalibValidRothC)
set.seed(123)
setwd("/Users/marcospaulopedrosaalves/Documents/Git/AgreenaRothC_data")
plots_path <- "/Users/marcospaulopedrosaalves/Documents/Git/AgreenaRothC_data/plots"
data_source <- readRDS("/Users/marcospaulopedrosaalves/Documents/Git/AgreenaRothC_data/data_source.rds")
calib_output <- calibration(data_source)
devtools::document()
setwd("~/Documents/Git/CalibValidRothC")
setwd("~/Documents/Git/CalibValidRothC")
devtools::document()
library(CalibValidRothC)
data_source <- readRDS("/Users/marcospaulopedrosaalves/Documents/Git/AgreenaRothC_data/data_source.rds")
# saveRDS(calib_output, "calib_output.rds")
# calib_output <- readRDS("calib_output.rds")
calib_output <- calibration(data_source)
devtools::document()
library(CalibValidRothC)
data_source <- readRDS("/Users/marcospaulopedrosaalves/Documents/Git/AgreenaRothC_data/data_source.rds")
# saveRDS(calib_output, "calib_output.rds")
# calib_output <- readRDS("calib_output.rds")
calib_output <- calibration(data_source)
debug(ag_rothC)
data_source <- readRDS("/Users/marcospaulopedrosaalves/Documents/Git/AgreenaRothC_data/data_source.rds")
# saveRDS(calib_output, "calib_output.rds")
# calib_output <- readRDS("calib_output.rds")
calib_output <- calibration(data_source)
debug(calibration)
data_source <- readRDS("/Users/marcospaulopedrosaalves/Documents/Git/AgreenaRothC_data/data_source.rds")
# saveRDS(calib_output, "calib_output.rds")
# calib_output <- readRDS("calib_output.rds")
calib_output <- calibration(data_source)
debug(optm_fun)
debug(ag_rothC)
debug(management_variables)
debug(residue_management)
resid_mgmt
data_source <- readRDS("/Users/marcospaulopedrosaalves/Documents/Git/AgreenaRothC_data/data_source.rds")
# saveRDS(calib_output, "calib_output.rds")
# calib_output <- readRDS("calib_output.rds")
calib_output <- calibration(data_source)
library(CalibValidRothC)
data_source <- readRDS("/Users/marcospaulopedrosaalves/Documents/Git/AgreenaRothC_data/data_source.rds")
# saveRDS(calib_output, "calib_output.rds")
# calib_output <- readRDS("calib_output.rds")
calib_output <- calibration(data_source)
